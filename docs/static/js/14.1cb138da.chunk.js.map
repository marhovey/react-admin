{"version":3,"sources":["pages/charts/index.tsx"],"names":["Charts","gridLayout","xl","span","lg","md","sm","xs","ringConfig","forceFit","percent","width","height","title","visible","text","color","liquidConfig","min","max","value","gaugeConfig","range","statistic","areaConfig","data","xField","yField","columnConfig","type","sales","padding","className","gutter","this","React","Component"],"mappings":"oRAMqBA,G,mNAEnBC,WAAa,CACXC,GAAI,CACFC,KAAM,GAERC,GAAI,CACFD,KAAM,IAERE,GAAI,CACFF,KAAM,IAERG,GAAI,CACFH,KAAM,IAERI,GAAI,CACFJ,KAAM,K,EAIVK,WAAa,CACXC,UAAU,EACVC,QAAS,GACTC,MAAO,IACPC,OAAQ,IACRC,MAAO,CACLC,SAAS,EACTC,KAAM,sBAERC,MAAO,CAAC,UAAW,Y,EAGrBC,aAAe,CACbJ,MAAO,CACLC,SAAS,EACTC,KAAM,sBAERG,IAAK,EACLN,OAAQ,IACRD,MAAO,IACPF,UAAU,EACVU,IAAK,IACLC,MAAO,M,EAGTC,YAAc,CACZR,MAAO,CACLC,SAAS,EACTC,KAAM,sBAERN,UAAU,EACVW,MAAO,GACPF,IAAK,EACLC,IAAK,IACLP,OAAQ,IACRU,MAAO,CAAC,EAAG,GAAI,GAAI,GAAI,KACvBN,MAAO,CAAC,UAAW,UAAW,UAAW,WACzCO,UAAW,CACTT,SAAS,EACTC,KAAM,SACNC,MAAO,Y,EAIXQ,WAAa,CACXX,MAAO,CACLC,SAAS,EACTC,KAAM,sBAERU,KAAM,CACJ,CACE,KAAQ,UACR,OAAU,MAEZ,CACE,KAAQ,UACR,OAAU,MAEZ,CACE,KAAQ,UACR,OAAU,MAEZ,CACE,KAAQ,UACR,OAAU,MAEZ,CACE,KAAQ,UACR,OAAU,MAEZ,CACE,KAAQ,UACR,OAAU,OAGdb,OAAQ,IACRH,UAAU,EACViB,OAAQ,OACRC,OAAQ,U,EAOVC,aAAe,CACbf,MAAO,CACLC,SAAS,EACTC,KAAM,sBAERH,OAAQ,IACRH,UAAU,EACVgB,KAAM,CACJ,CACEI,KAAM,IACNC,MAAO,IAET,CACED,KAAM,IACNC,MAAO,IAET,CACED,KAAM,IACNC,MAAO,KAGXC,QAAS,OACTL,OAAQ,OACRC,OAAQ,S,uDASR,OACE,yBAAKK,UAAU,UACb,kBAAC,IAAD,CAAKC,OAAQ,IACX,kBAAC,IAAD,eAAKD,UAAU,cAAiBE,KAAKjC,YACnC,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAWiC,KAAKjB,iBAIvB,kBAAC,IAAD,eAAKe,UAAU,cAAiBE,KAAKjC,YACnC,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAiBiC,KAAK1B,eAI7B,kBAAC,IAAD,eAAKwB,UAAU,cAAiBE,KAAKjC,YACnC,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAUiC,KAAKb,gBAItB,kBAAC,IAAD,eAAKW,UAAU,cAAiBE,KAAKjC,YACnC,6BACE,kBAAC,IAAD,KACE,kBAAC,IAASiC,KAAKV,gBAKvB,kBAAC,IAAD,CAAKS,OAAQ,IACX,kBAAC,IAAD,CAAKD,UAAU,aAAa7B,KAAM,IAChC,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAQ+B,KAAKN,iBAKpB,kBAAC,IAAD,CAAKI,UAAU,aAAa7B,KAAM,GAChC,6BACE,kBAAC,IAAD,KAEE,kBAAC,IAAW+B,KAAKN,uB,GAtLGO,IAAMC","file":"static/js/14.1cb138da.chunk.js","sourcesContent":["import React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { Gauge, Column, Bar, RingProgress, Liquid, Area } from '@ant-design/charts';\nimport { Row, Col, Card } from 'antd';\nimport './index.scss';\n\nexport default class Charts extends React.Component<RouteComponentProps> {\n  \n  gridLayout = {\n    xl: {\n      span: 6\n    },\n    lg: {\n      span: 12\n    },\n    md: {\n      span: 12\n    },\n    sm: {\n      span: 12\n    },\n    xs: {\n      span: 24\n    }\n  }\n\n  ringConfig = {\n    forceFit: true,\n    percent: 0.8,\n    width: 300,\n    height: 150,\n    title: {\n      visible: true,\n      text: '环状图',\n    },\n    color: ['#30BF78', '#E8EDF3']\n  }\n\n  liquidConfig = {\n    title: {\n      visible: true,\n      text: '水波图',\n    },\n    min: 0,\n    height: 150,\n    width: 300,\n    forceFit: true,\n    max: 10000,\n    value: 5639,\n  }\n\n  gaugeConfig = {\n    title: {\n      visible: true,\n      text: '仪表盘',\n    },\n    forceFit: true,\n    value: 64,\n    min: 0,\n    max: 100,\n    height: 150,\n    range: [0, 25, 50, 75, 100],\n    color: ['#39B8FF', '#52619B', '#43E089', '#C0EDF3'],\n    statistic: {\n      visible: true,\n      text: '优',\n      color: '#30bf78',\n    },\n  }\n\n  areaConfig = {\n    title: {\n      visible: true,\n      text: '面积图',\n    },\n    data: [\n      {\n        \"Date\": \"2010-01\",\n        \"scales\": 1998\n      },\n      {\n        \"Date\": \"2010-02\",\n        \"scales\": 1850\n      },\n      {\n        \"Date\": \"2010-03\",\n        \"scales\": 1720\n      },\n      {\n        \"Date\": \"2010-04\",\n        \"scales\": 1818\n      },\n      {\n        \"Date\": \"2010-05\",\n        \"scales\": 1920\n      },\n      {\n        \"Date\": \"2010-06\",\n        \"scales\": 1802\n      }\n    ],\n    height: 150,\n    forceFit: true,\n    xField: 'Date',\n    yField: 'scales',\n    // xAxis: {\n    //   type: 'dateTime',\n    //   tickCount: 5,\n    // },\n  }\n\n  columnConfig = {\n    title: {\n      visible: true,\n      text: '柱状图',\n    },\n    height: 300,\n    forceFit: true,\n    data: [\n      {\n        type: '1',\n        sales: 38,\n      },\n      {\n        type: '2',\n        sales: 52,\n      },\n      {\n        type: '3',\n        sales: 61,\n      }\n    ],\n    padding: 'auto',\n    xField: 'type',\n    yField: 'sales',\n    // label: {\n    //   visible: true,\n    //   position: 'middle',\n    // }\n  }\n\n\n  render() {\n    return (\n      <div className=\"charts\">\n        <Row gutter={16}>\n          <Col className=\"gutter-row\" {...this.gridLayout}>\n            <div>\n              <Card>\n                <Liquid {...this.liquidConfig} />\n              </Card>\n            </div>\n          </Col>\n          <Col className=\"gutter-row\" {...this.gridLayout}>\n            <div>\n              <Card>\n                <RingProgress {...this.ringConfig} />\n              </Card>\n            </div>\n          </Col>\n          <Col className=\"gutter-row\" {...this.gridLayout}>\n            <div>\n              <Card>\n                <Gauge {...this.gaugeConfig} />\n              </Card>\n            </div>\n          </Col>\n          <Col className=\"gutter-row\" {...this.gridLayout}>\n            <div>\n              <Card>\n                <Area {...this.areaConfig} />\n              </Card>\n            </div>\n          </Col>\n        </Row>\n        <Row gutter={16}>\n          <Col className=\"gutter-row\" span={16}>\n            <div>\n              <Card>\n                <Bar {...this.columnConfig} />\n                {/* <Column {...this.columnConfig} /> */}\n              </Card>\n            </div>\n          </Col>\n          <Col className=\"gutter-row\" span={8}>\n            <div>\n              <Card>\n                {/* <Bar {...this.columnConfig} /> */}\n                <Column {...this.columnConfig} />\n              </Card>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}"],"sourceRoot":""}